[30m2022-01-20 17:16:58,603[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 10541 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:16:58,647[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:16:58,970[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.logging.DeferredLog[0;39m : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[30m2022-01-20 17:16:58,975[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.logging.DeferredLog[0;39m : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[30m2022-01-20 17:17:02,348[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:17:02,383[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 17 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:17:03,080[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:17:03,286[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:17:03,290[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:17:03,315[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:17:04,606[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:17:04,629[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:17:04,633[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:17:04,753[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:17:04,756[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 5773 ms
[30m2022-01-20 17:17:07,278[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:17:08,566[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:17:08,646[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98b04e0211e07e2f549e6', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:17:08,735[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:17:08,804[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98b04e0211e07e2f549e6', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:17:08,826[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98b04e0211e07e2f549e6', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:17:09,634[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.AbstractApplicationContext[0;39m : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonSchemaConverter' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.rest.webmvc.json.PersistentEntityToJsonSchemaConverter]: Factory method 'jsonSchemaConverter' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'linkCollector' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Unsatisfied dependency expressed through method 'linkCollector' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'selfLinkProvider' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.rest.core.support.SelfLinkProvider]: Factory method 'selfLinkProvider' threw exception; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'mvcConversionService': Requested bean is currently in creation: Is there an unresolvable circular reference?
[30m2022-01-20 17:17:09,692[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Stopping service [Tomcat]
[30m2022-01-20 17:17:09,891[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener[0;39m : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[30m2022-01-20 17:17:10,068[0;39m [1;31m[0;39m[31mERROR[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:765)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:445)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.cs.api.TransfertAgentServiceApplication.main(TransfertAgentServiceApplication.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 41 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 58 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.lambda$createEndpointBean$1(EndpointDiscoverer.java:145)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean.getBean(EndpointDiscoverer.java:447)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getFilterEndpoint(EndpointDiscoverer.java:307)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.isFilterMatch(EndpointDiscoverer.java:285)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.isExtensionExposed(EndpointDiscoverer.java:239)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.addExtensionBean(EndpointDiscoverer.java:170)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.addExtensionBeans(EndpointDiscoverer.java:159)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:124)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:117)
	at org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration.webEndpointServletHandlerMapping(WebMvcEndpointManagementContextConfiguration.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 84 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 98 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:671)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:659)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1300)
	at org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration.healthContributorRegistry(HealthEndpointConfiguration.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 117 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 134 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 148 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.constructValidUrl(DefaultManagementMetadataProvider.java:122)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.getUrl(DefaultManagementMetadataProvider.java:91)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.getHealthCheckUrl(DefaultManagementMetadataProvider.java:69)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.get(DefaultManagementMetadataProvider.java:48)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration.eurekaInstanceConfigBean(EurekaClientAutoConfiguration.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 149 common frames omitted
Caused by: java.net.MalformedURLException: Illegal character found in host: '/'
	at java.net.URL.<init>(URL.java:429)
	at java.net.URL.<init>(URL.java:312)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.constructValidUrl(DefaultManagementMetadataProvider.java:116)
	... 158 common frames omitted
[30m2022-01-20 17:19:41,048[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 11375 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:19:41,054[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:19:41,251[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.logging.DeferredLog[0;39m : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[30m2022-01-20 17:19:41,252[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.logging.DeferredLog[0;39m : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[30m2022-01-20 17:19:44,014[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:19:44,051[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 22 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:19:44,756[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:19:44,966[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:19:44,971[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:19:44,988[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:19:46,234[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:19:46,254[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:19:46,255[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:19:46,350[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:19:46,351[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 5083 ms
[30m2022-01-20 17:19:48,420[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:19:49,205[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:19:49,231[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ba5353afa0322d0706c', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:19:49,317[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:19:49,384[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ba5353afa0322d0706c', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:19:49,415[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ba5353afa0322d0706c', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:19:49,824[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.AbstractApplicationContext[0;39m : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonSchemaConverter' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.rest.webmvc.json.PersistentEntityToJsonSchemaConverter]: Factory method 'jsonSchemaConverter' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'linkCollector' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Unsatisfied dependency expressed through method 'linkCollector' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'selfLinkProvider' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.rest.core.support.SelfLinkProvider]: Factory method 'selfLinkProvider' threw exception; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'mvcConversionService': Requested bean is currently in creation: Is there an unresolvable circular reference?
[30m2022-01-20 17:19:49,871[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Stopping service [Tomcat]
[30m2022-01-20 17:19:49,955[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener[0;39m : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[30m2022-01-20 17:19:50,040[0;39m [1;31m[0;39m[31mERROR[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:765)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:445)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.cs.api.TransfertAgentServiceApplication.main(TransfertAgentServiceApplication.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 41 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 58 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.lambda$createEndpointBean$1(EndpointDiscoverer.java:145)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean.getBean(EndpointDiscoverer.java:447)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getFilterEndpoint(EndpointDiscoverer.java:307)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.isFilterMatch(EndpointDiscoverer.java:285)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.isExtensionExposed(EndpointDiscoverer.java:239)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.addExtensionBean(EndpointDiscoverer.java:170)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.addExtensionBeans(EndpointDiscoverer.java:159)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:124)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:117)
	at org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration.webEndpointServletHandlerMapping(WebMvcEndpointManagementContextConfiguration.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 84 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 98 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:671)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:659)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1300)
	at org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration.healthContributorRegistry(HealthEndpointConfiguration.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 117 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 134 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 148 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.constructValidUrl(DefaultManagementMetadataProvider.java:122)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.getUrl(DefaultManagementMetadataProvider.java:91)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.getHealthCheckUrl(DefaultManagementMetadataProvider.java:69)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.get(DefaultManagementMetadataProvider.java:48)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration.eurekaInstanceConfigBean(EurekaClientAutoConfiguration.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 149 common frames omitted
Caused by: java.net.MalformedURLException: Illegal character found in host: '/'
	at java.net.URL.<init>(URL.java:429)
	at java.net.URL.<init>(URL.java:312)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.constructValidUrl(DefaultManagementMetadataProvider.java:116)
	... 158 common frames omitted
[30m2022-01-20 17:23:50,602[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12573 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:23:50,606[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:23:50,822[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.logging.DeferredLog[0;39m : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[30m2022-01-20 17:23:50,823[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.logging.DeferredLog[0;39m : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[30m2022-01-20 17:23:53,604[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:23:53,654[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 24 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:23:54,963[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:23:55,154[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:23:55,157[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:23:55,165[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:23:56,198[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:23:56,233[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:23:56,238[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:23:56,386[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:23:56,387[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 5561 ms
[30m2022-01-20 17:23:58,240[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:23:59,005[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:23:59,067[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98c9e27d44529fb650422', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:23:59,097[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:23:59,270[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98c9e27d44529fb650422', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:23:59,295[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98c9e27d44529fb650422', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:23:59,662[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.AbstractApplicationContext[0;39m : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jsonSchemaConverter' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.rest.webmvc.json.PersistentEntityToJsonSchemaConverter]: Factory method 'jsonSchemaConverter' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'linkCollector' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Unsatisfied dependency expressed through method 'linkCollector' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'selfLinkProvider' defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.rest.core.support.SelfLinkProvider]: Factory method 'selfLinkProvider' threw exception; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'mvcConversionService': Requested bean is currently in creation: Is there an unresolvable circular reference?
[30m2022-01-20 17:23:59,742[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Stopping service [Tomcat]
[30m2022-01-20 17:23:59,824[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener[0;39m : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[30m2022-01-20 17:23:59,875[0;39m [1;31m[0;39m[31mERROR[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:765)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:445)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.cs.api.TransfertAgentServiceApplication.main(TransfertAgentServiceApplication.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/home/miken/.m2/repository/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webEndpointServletHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 41 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping]: Factory method 'webEndpointServletHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 58 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.lambda$createEndpointBean$1(EndpointDiscoverer.java:145)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean.getBean(EndpointDiscoverer.java:447)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getFilterEndpoint(EndpointDiscoverer.java:307)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.isFilterMatch(EndpointDiscoverer.java:285)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.isExtensionExposed(EndpointDiscoverer.java:239)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.addExtensionBean(EndpointDiscoverer.java:170)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.addExtensionBeans(EndpointDiscoverer.java:159)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:124)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:117)
	at org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration.webEndpointServletHandlerMapping(WebMvcEndpointManagementContextConfiguration.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthContributorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 84 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthContributorRegistry]: Factory method 'healthContributorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 98 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthContributor' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthContributor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:671)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:659)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1300)
	at org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration.healthContributorRegistry(HealthEndpointConfiguration.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1607)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1571)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1460)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1347)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 117 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaInstanceConfigBean' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 134 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean]: Factory method 'eurekaInstanceConfigBean' threw exception; nested exception is java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 148 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to construct url for scheme: http, hostName: "https://my-transfert-agent-service.herokuapp.com" port: 8080 contextPath: / statusPath: /actuator/health
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.constructValidUrl(DefaultManagementMetadataProvider.java:122)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.getUrl(DefaultManagementMetadataProvider.java:91)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.getHealthCheckUrl(DefaultManagementMetadataProvider.java:69)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.get(DefaultManagementMetadataProvider.java:48)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration.eurekaInstanceConfigBean(EurekaClientAutoConfiguration.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 149 common frames omitted
Caused by: java.net.MalformedURLException: Illegal character found in host: '/'
	at java.net.URL.<init>(URL.java:429)
	at java.net.URL.<init>(URL.java:312)
	at org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.constructValidUrl(DefaultManagementMetadataProvider.java:116)
	... 158 common frames omitted
[30m2022-01-20 17:24:54,569[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:24:54,577[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:24:54,791[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.logging.DeferredLog[0;39m : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[30m2022-01-20 17:24:54,792[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.logging.DeferredLog[0;39m : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[30m2022-01-20 17:25:00,969[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:25:00,995[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:25:01,993[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:25:02,251[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:25:02,265[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:25:02,274[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:25:03,268[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:25:03,293[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:25:03,295[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:25:03,444[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:25:03,446[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 8642 ms
[30m2022-01-20 17:25:05,447[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:25:06,248[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:25:06,292[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:25:06,337[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:25:06,435[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:25:06,460[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:25:07,664[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:6, serverValue:219598}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,665[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:2, serverValue:219571}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,666[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:3, serverValue:219665}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,667[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:5, serverValue:219598}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,667[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:1, serverValue:219571}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,669[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=744869662, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:25:07 WEST 2022, lastUpdateTimeNanos=3456364130822}
[30m2022-01-20 17:25:07,669[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=745225462, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:25:07 WEST 2022, lastUpdateTimeNanos=3456364130793}
[30m2022-01-20 17:25:07,676[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=740276908, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:25:07 WEST 2022, lastUpdateTimeNanos=3456359730471}
[30m2022-01-20 17:25:07,676[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:4, serverValue:219665}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,676[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,680[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,680[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ce2f7b89b1d6505ecce', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:25:07,863[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:25:08,803[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:25:10,515[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:25:10,744[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:25:10,829[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:25:11,023[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:25:11,051[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:25:11,156[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:25:11,158[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:25:11,158[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:25:11,160[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:25:11,161[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:25:11,162[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:25:11,163[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:25:11,976[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:25:11,982[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:25:11,998[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:25:12,017[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642695912016 with initial instances count: 8
[30m2022-01-20 17:25:12,041[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:25:12,045[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642695912045, current=UP, previous=STARTING]
[30m2022-01-20 17:25:12,056[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:25:12,163[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:25:12,168[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:25:12,520[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:25:12,976[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 20.025 seconds (JVM running for 21.016)
[30m2022-01-20 17:25:13,335[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:25:55,951[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-7[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:25:55,951[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-7[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642695955951, current=DOWN, previous=UP]
[30m2022-01-20 17:25:55,952[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:25:56,018[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:25:56,127[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-7[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:25:59,133[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-7[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:25:59,196[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-7[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:25:59,258[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-7[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:26:00,259[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:26:00,264[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:26:03,275[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:26:03,291[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:26:03,683[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:26:03,829[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:26:03,842[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:26:03,843[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:26:04,052[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:26:04,055[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:26:04,057[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:26:04,070[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:26:04,071[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 3785 ms
[30m2022-01-20 17:26:04,998[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:26:05,429[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:26:05,451[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:26:05,466[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:26:05,512[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:26:05,523[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:26:05,783[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:8, serverValue:219680}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:05,788[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=200754174, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:26:05 WEST 2022, lastUpdateTimeNanos=3514480515831}
[30m2022-01-20 17:26:05,798[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:05,803[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:9, serverValue:219680}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:05,805[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:05,806[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:05,808[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:11, serverValue:219610}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:05,809[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=203958186, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:26:05 WEST 2022, lastUpdateTimeNanos=3514505923536}
[30m2022-01-20 17:26:05,824[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:12, serverValue:219610}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:05,884[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:7, serverValue:219581}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:05,885[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=230802678, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:26:05 WEST 2022, lastUpdateTimeNanos=3514582269348}
[30m2022-01-20 17:26:05,888[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d1df7b89b1d6505eccf', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:10, serverValue:219592}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:06,073[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:26:06,793[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:26:07,604[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:26:07,985[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:26:08,111[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:26:08,131[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:26:08,138[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:26:08,143[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:26:08,157[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:26:08,159[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:26:08,162[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:26:08,167[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:26:08,169[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:26:08,172[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:26:08,676[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:26:08,684[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:26:08,711[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:26:08,722[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642695968722 with initial instances count: 8
[30m2022-01-20 17:26:08,724[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:26:08,724[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642695968724, current=UP, previous=STARTING]
[30m2022-01-20 17:26:08,748[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:26:08,764[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:26:08,771[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:26:09,130[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:26:09,514[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 9.697 seconds (JVM running for 77.554)
[30m2022-01-20 17:26:09,538[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:26:09,884[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:26:49,012[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-10[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:26:49,012[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-10[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696009012, current=DOWN, previous=UP]
[30m2022-01-20 17:26:49,013[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:26:49,084[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-10[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:26:49,092[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:26:52,100[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-10[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:26:52,200[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-10[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:26:52,216[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-10[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:26:52,810[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:26:52,814[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:26:53,584[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:26:53,590[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 3 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:26:53,806[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:26:53,889[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:26:53,890[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:26:53,892[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:26:54,018[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:26:54,020[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:26:54,022[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:26:54,027[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:26:54,029[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 1208 ms
[30m2022-01-20 17:26:54,473[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:26:54,730[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:26:54,739[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:26:54,751[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:26:54,792[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:26:54,812[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:26:55,060[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:26:55,144[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:17, serverValue:219627}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,146[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=192162667, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:26:54 WEST 2022, lastUpdateTimeNanos=3563841416348}
[30m2022-01-20 17:26:55,178[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:16, serverValue:219630}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,183[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:15, serverValue:219630}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,185[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=232590595, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:26:54 WEST 2022, lastUpdateTimeNanos=3563881224391}
[30m2022-01-20 17:26:55,186[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,186[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:14, serverValue:219604}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,186[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,186[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,189[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:13, serverValue:219604}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,196[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:18, serverValue:219627}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:26:55,199[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d4ef7b89b1d6505ecd0', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=293945450, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:26:54 WEST 2022, lastUpdateTimeNanos=3563887259339}
[30m2022-01-20 17:26:55,297[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:26:55,612[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:26:55,698[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:26:55,733[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:26:55,743[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:26:55,747[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:26:55,758[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:26:55,761[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:26:55,767[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:26:55,770[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:26:55,775[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:26:55,781[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:26:55,783[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:26:56,297[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:26:56,327[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:26:56,363[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:26:56,371[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696016371 with initial instances count: 9
[30m2022-01-20 17:26:56,373[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:26:56,375[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696016375, current=UP, previous=STARTING]
[30m2022-01-20 17:26:56,378[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:26:56,401[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:26:56,406[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:26:56,852[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:26:56,965[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 4.299 seconds (JVM running for 125.005)
[30m2022-01-20 17:26:56,971[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:26:57,251[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:27:10,059[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring DispatcherServlet 'dispatcherServlet'
[30m2022-01-20 17:27:10,059[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Initializing Servlet 'dispatcherServlet'
[30m2022-01-20 17:27:10,063[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Completed initialization in 3 ms
[30m2022-01-20 17:27:21,013[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-16[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:27:21,014[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-16[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696041014, current=DOWN, previous=UP]
[30m2022-01-20 17:27:21,015[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:27:21,058[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-16[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:27:21,080[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:27:21,092[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-16[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:27:21,168[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-16[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:27:21,194[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-16[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:27:21,714[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:27:21,715[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:27:22,554[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:27:22,557[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:27:22,708[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:27:22,739[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:27:22,740[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:27:22,743[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:27:22,831[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:27:22,834[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:27:22,835[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:27:22,839[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:27:22,841[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 1121 ms
[30m2022-01-20 17:27:23,106[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:27:23,254[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:27:23,262[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:27:23,276[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:27:23,299[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:27:23,313[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:27:23,502[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:27:23,565[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:21, serverValue:219641}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,567[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=202795665, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:27:23 WEST 2022, lastUpdateTimeNanos=3592263258666}
[30m2022-01-20 17:27:23,570[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,573[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,576[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,585[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:22, serverValue:219641}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,589[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:20, serverValue:219611}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,589[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=229018493, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:27:23 WEST 2022, lastUpdateTimeNanos=3592286589720}
[30m2022-01-20 17:27:23,591[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:24, serverValue:219640}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,592[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:23, serverValue:219640}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,593[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:19, serverValue:219611}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:23,594[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d6bf7b89b1d6505ecd1', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=215427211, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:27:23 WEST 2022, lastUpdateTimeNanos=3592290425406}
[30m2022-01-20 17:27:23,692[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:27:23,873[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:27:23,934[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:27:23,965[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:27:23,974[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:27:23,977[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:27:23,982[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:27:23,983[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:27:23,984[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:27:23,985[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:27:23,988[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:27:23,990[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:27:23,993[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:27:24,299[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:27:24,301[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:27:24,311[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:27:24,317[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696044317 with initial instances count: 9
[30m2022-01-20 17:27:24,318[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:27:24,319[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696044319, current=UP, previous=STARTING]
[30m2022-01-20 17:27:24,331[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:27:24,332[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:27:24,335[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:27:24,580[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 2.969 seconds (JVM running for 152.619)
[30m2022-01-20 17:27:24,586[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:27:24,605[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:27:24,851[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:27:52,303[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-22[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:27:52,303[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-22[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696072303, current=DOWN, previous=UP]
[30m2022-01-20 17:27:52,304[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:27:52,329[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-22[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:27:52,371[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:27:52,376[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-22[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:27:52,442[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-22[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:27:52,452[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-22[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:27:53,043[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:27:53,044[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:27:53,720[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:27:53,723[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:27:53,868[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:27:53,893[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:27:53,895[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:27:53,896[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:27:53,996[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:27:54,000[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:27:54,003[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:27:54,008[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:27:54,013[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 963 ms
[30m2022-01-20 17:27:54,251[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:27:54,356[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:27:54,366[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:27:54,392[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:27:54,408[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:27:54,419[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:27:54,604[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:27:54,679[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:27, serverValue:219641}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,682[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:25, serverValue:219616}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,685[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=193190001, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:27:54 WEST 2022, lastUpdateTimeNanos=3623376697569}
[30m2022-01-20 17:27:54,691[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,696[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:28, serverValue:219641}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,696[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:27:54,697[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=202078004, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:27:54 WEST 2022, lastUpdateTimeNanos=3623379998888}
[30m2022-01-20 17:27:54,698[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:26, serverValue:219616}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,701[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,701[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,707[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:30, serverValue:219641}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,721[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:29, serverValue:219641}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:27:54,734[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98d8af7b89b1d6505ecd2', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=213755956, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:27:54 WEST 2022, lastUpdateTimeNanos=3623418872798}
[30m2022-01-20 17:27:54,932[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:27:54,990[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:27:55,014[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:27:55,025[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:27:55,027[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:27:55,030[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:27:55,031[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:27:55,032[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:27:55,033[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:27:55,034[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:27:55,034[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:27:55,036[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:27:55,327[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:27:55,330[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:27:55,332[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:27:55,335[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696075335 with initial instances count: 9
[30m2022-01-20 17:27:55,336[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:27:55,337[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696075337, current=UP, previous=STARTING]
[30m2022-01-20 17:27:55,341[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:27:55,341[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:27:55,351[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:27:55,591[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 2.701 seconds (JVM running for 183.631)
[30m2022-01-20 17:27:55,598[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:27:55,643[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:27:55,886[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:29:59,592[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring DispatcherServlet 'dispatcherServlet'
[30m2022-01-20 17:29:59,594[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Initializing Servlet 'dispatcherServlet'
[30m2022-01-20 17:29:59,600[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Completed initialization in 6 ms
[30m2022-01-20 17:29:59,668[0;39m [1;31m[0;39m[31mERROR[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.Error: Unresolved compilation problem: 
	Unreachable code
] with root cause
java.lang.Error: Unresolved compilation problem: 
	Unreachable code

	at com.cs.api.service.TransfertAgentService.transfertFromAccountToAnother(TransfertAgentService.java:46)
	at com.cs.api.controller.TransfertAgentController.transfertFromAccountToAnother(TransfertAgentController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[30m2022-01-20 17:30:44,618[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-28[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:30:44,619[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-28[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696244619, current=DOWN, previous=UP]
[30m2022-01-20 17:30:44,620[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:30:44,688[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-28[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:30:44,696[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:30:44,704[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-28[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:30:44,769[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-28[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:30:44,778[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-28[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:30:45,261[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:30:45,264[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:30:46,538[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:30:46,541[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:30:46,705[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:30:46,739[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:30:46,743[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:30:46,754[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:30:46,950[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:30:46,954[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:30:46,955[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:30:46,962[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:30:46,964[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 1681 ms
[30m2022-01-20 17:30:47,246[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:30:47,471[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:30:47,482[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:30:47,484[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:30:47,514[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:30:47,539[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:30:47,723[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:30:47,778[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:31, serverValue:219666}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,779[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=196288316, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:30:47 WEST 2022, lastUpdateTimeNanos=3796476360982}
[30m2022-01-20 17:30:47,785[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:33, serverValue:219785}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,786[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=189635993, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:30:47 WEST 2022, lastUpdateTimeNanos=3796482502974}
[30m2022-01-20 17:30:47,788[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,790[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:32, serverValue:219666}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,795[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,797[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,804[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:34, serverValue:219785}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,812[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:36, serverValue:219690}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,835[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:35, serverValue:219690}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:30:47,844[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e37f7b89b1d6505ecd3', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=213389250, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:30:47 WEST 2022, lastUpdateTimeNanos=3796532849063}
[30m2022-01-20 17:30:47,912[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:30:48,097[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:30:48,165[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:30:48,184[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:30:48,190[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:30:48,193[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:30:48,200[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:30:48,204[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:30:48,208[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:30:48,209[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:30:48,210[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:30:48,211[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:30:48,214[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:30:48,515[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:30:48,517[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:30:48,519[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:30:48,520[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696248520 with initial instances count: 9
[30m2022-01-20 17:30:48,525[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:30:48,526[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696248526, current=UP, previous=STARTING]
[30m2022-01-20 17:30:48,532[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:30:48,533[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:30:48,543[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:30:48,758[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 3.611 seconds (JVM running for 356.798)
[30m2022-01-20 17:30:48,764[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:30:48,816[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:30:49,068[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:30:56,947[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring DispatcherServlet 'dispatcherServlet'
[30m2022-01-20 17:30:56,949[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Initializing Servlet 'dispatcherServlet'
[30m2022-01-20 17:30:56,965[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Completed initialization in 5 ms
[30m2022-01-20 17:31:05,533[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-34[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:31:05,533[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-34[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696265533, current=DOWN, previous=UP]
[30m2022-01-20 17:31:05,535[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:31:05,612[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:31:07,635[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-34[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:31:10,640[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-34[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:31:10,705[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-34[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:31:10,714[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-34[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:31:11,265[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:31:11,268[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:31:12,014[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:31:12,017[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:31:12,169[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:31:12,219[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:31:12,223[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:31:12,226[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:31:12,328[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:31:12,330[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:31:12,333[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:31:12,340[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:31:12,343[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 1070 ms
[30m2022-01-20 17:31:12,579[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:31:12,701[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:31:12,707[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:31:12,721[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:31:12,739[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:31:12,767[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:31:12,858[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:31:12,973[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:31:13,017[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:37, serverValue:219675}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,020[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:38, serverValue:219675}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,022[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=212831840, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:31:12 WEST 2022, lastUpdateTimeNanos=3821717810564}
[30m2022-01-20 17:31:13,045[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:42, serverValue:219698}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,045[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:40, serverValue:219787}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,045[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:41, serverValue:219698}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,051[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=211076278, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:31:12 WEST 2022, lastUpdateTimeNanos=3821743178347}
[30m2022-01-20 17:31:13,071[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:39, serverValue:219787}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,071[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=249013992, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:31:12 WEST 2022, lastUpdateTimeNanos=3821768473821}
[30m2022-01-20 17:31:13,071[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,071[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,072[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e50f7b89b1d6505ecd4', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:13,156[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:31:13,218[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:31:13,241[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:31:13,247[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:31:13,250[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:31:13,256[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:31:13,256[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:31:13,257[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:31:13,257[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:31:13,257[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:31:13,262[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:31:13,264[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:31:13,534[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:31:13,538[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:31:13,541[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:31:13,545[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696273545 with initial instances count: 9
[30m2022-01-20 17:31:13,546[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:31:13,547[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696273547, current=UP, previous=STARTING]
[30m2022-01-20 17:31:13,554[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:31:13,560[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:31:13,562[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:31:13,804[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 2.608 seconds (JVM running for 381.844)
[30m2022-01-20 17:31:13,810[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:31:13,821[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:31:14,068[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:31:25,569[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-44[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:31:25,569[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-44[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696285569, current=DOWN, previous=UP]
[30m2022-01-20 17:31:25,570[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:31:25,594[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-44[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:31:25,636[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:31:25,637[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-44[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:31:25,696[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-44[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:31:25,705[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-44[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:31:26,153[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:31:26,159[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:31:26,809[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:31:26,812[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:31:27,056[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:31:27,108[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:31:27,116[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:31:27,118[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:31:27,279[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:31:27,281[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:31:27,282[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:31:27,290[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:31:27,292[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 1120 ms
[30m2022-01-20 17:31:27,792[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:31:27,923[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:31:27,929[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:31:27,941[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:31:27,948[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:31:27,975[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:31:28,093[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:31:28,208[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:43, serverValue:219680}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,217[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:46, serverValue:219768}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,226[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:44, serverValue:219680}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,228[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=208508446, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:31:28 WEST 2022, lastUpdateTimeNanos=3836924335604}
[30m2022-01-20 17:31:28,231[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:45, serverValue:219768}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,236[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=199024817, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:31:28 WEST 2022, lastUpdateTimeNanos=3836928892042}
[30m2022-01-20 17:31:28,239[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,240[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,240[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,243[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:47, serverValue:219693}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,243[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=195409807, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:31:28 WEST 2022, lastUpdateTimeNanos=3836940525085}
[30m2022-01-20 17:31:28,259[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:31:28,266[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e5ff7b89b1d6505ecd5', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:48, serverValue:219693}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:31:28,491[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:31:28,543[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:31:28,568[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:31:28,574[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:31:28,577[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:31:28,583[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:31:28,584[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:31:28,588[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:31:28,591[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:31:28,594[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:31:28,597[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:31:28,599[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:31:28,967[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:31:28,971[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:31:28,980[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:31:28,988[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696288988 with initial instances count: 9
[30m2022-01-20 17:31:28,989[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:31:28,990[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696288990, current=UP, previous=STARTING]
[30m2022-01-20 17:31:28,999[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:31:29,007[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:31:29,011[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:31:29,251[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 3.234 seconds (JVM running for 397.291)
[30m2022-01-20 17:31:29,257[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:31:29,270[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:31:29,554[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:31:32,657[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring DispatcherServlet 'dispatcherServlet'
[30m2022-01-20 17:31:32,660[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Initializing Servlet 'dispatcherServlet'
[30m2022-01-20 17:31:32,669[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Completed initialization in 6 ms
[30m2022-01-20 17:32:17,957[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-50[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:32:17,958[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-50[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696337958, current=DOWN, previous=UP]
[30m2022-01-20 17:32:17,958[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:32:18,031[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:32:20,010[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-50[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:32:23,012[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-50[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:32:23,077[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-50[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:32:23,103[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-50[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:32:23,839[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:32:23,840[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:32:24,414[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:32:24,417[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:32:24,537[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:32:24,564[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:32:24,565[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:32:24,566[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:32:24,660[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:32:24,664[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:32:24,665[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:32:24,672[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:32:24,674[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 828 ms
[30m2022-01-20 17:32:25,046[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:32:25,273[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:32:25,299[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:32:25,303[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:32:25,327[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:32:25,377[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:32:25,609[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:49, serverValue:219695}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,610[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=199880699, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:32:25 WEST 2022, lastUpdateTimeNanos=3894307118277}
[30m2022-01-20 17:32:25,616[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:51, serverValue:219789}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,616[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=191563137, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:32:25 WEST 2022, lastUpdateTimeNanos=3894313656562}
[30m2022-01-20 17:32:25,616[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,616[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,617[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,625[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:50, serverValue:219695}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,662[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:53, serverValue:219707}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,663[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=196819007, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:32:25 WEST 2022, lastUpdateTimeNanos=3894360363547}
[30m2022-01-20 17:32:25,667[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:52, serverValue:219789}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,692[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98e99f7b89b1d6505ecd6', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:54, serverValue:219707}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:25,798[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:32:25,923[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:32:26,102[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:32:26,147[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:32:26,173[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:32:26,179[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:32:26,181[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:32:26,192[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:32:26,194[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:32:26,198[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:32:26,201[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:32:26,203[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:32:26,205[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:32:26,206[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:32:26,519[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:32:26,522[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:32:26,527[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:32:26,535[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696346535 with initial instances count: 9
[30m2022-01-20 17:32:26,536[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:32:26,537[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696346537, current=UP, previous=STARTING]
[30m2022-01-20 17:32:26,541[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:32:26,545[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:32:26,546[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:32:26,798[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 3.096 seconds (JVM running for 454.837)
[30m2022-01-20 17:32:26,804[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:32:26,848[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:32:27,090[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:32:47,529[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-60[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:32:47,529[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-60[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696367529, current=DOWN, previous=UP]
[30m2022-01-20 17:32:47,530[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:32:47,551[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-60[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:32:47,592[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:32:47,596[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-60[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:32:47,656[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-60[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:32:47,661[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-60[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:32:48,112[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:32:48,112[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:32:48,792[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:32:48,797[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 4 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:32:49,041[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:32:49,108[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:32:49,112[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:32:49,120[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:32:49,256[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:32:49,260[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:32:49,263[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:32:49,272[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:32:49,274[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 1151 ms
[30m2022-01-20 17:32:49,562[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:32:49,673[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:32:49,677[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:32:49,681[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:32:49,686[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:32:49,691[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:32:49,788[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:32:49,885[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:32:49,923[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:58, serverValue:219816}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:49,924[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=180830906, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:32:49 WEST 2022, lastUpdateTimeNanos=3918621363208}
[30m2022-01-20 17:32:49,930[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:49,933[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:49,934[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:60, serverValue:219716}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:49,938[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:49,941[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:55, serverValue:219700}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:49,941[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=198024998, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:32:49 WEST 2022, lastUpdateTimeNanos=3918638568251}
[30m2022-01-20 17:32:49,957[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:59, serverValue:219716}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:49,958[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=206098557, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:32:49 WEST 2022, lastUpdateTimeNanos=3918655237856}
[30m2022-01-20 17:32:49,959[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:56, serverValue:219700}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:49,968[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98eb1f7b89b1d6505ecd7', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:57, serverValue:219745}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:32:50,090[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:32:50,145[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:32:50,187[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:32:50,191[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:32:50,193[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:32:50,196[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:32:50,199[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:32:50,202[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:32:50,205[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:32:50,208[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:32:50,210[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:32:50,212[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:32:50,504[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:32:50,506[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:32:50,507[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:32:50,509[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696370508 with initial instances count: 9
[30m2022-01-20 17:32:50,510[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:32:50,510[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696370510, current=UP, previous=STARTING]
[30m2022-01-20 17:32:50,513[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:32:50,513[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:32:50,517[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:32:50,759[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 2.747 seconds (JVM running for 478.799)
[30m2022-01-20 17:32:50,763[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:32:50,782[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:32:51,010[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:33:11,500[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-66[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Unregistering application TRANSFER-AGENT-SERVICE with eureka with status DOWN
[30m2022-01-20 17:33:11,501[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-66[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696391501, current=DOWN, previous=UP]
[30m2022-01-20 17:33:11,503[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:33:11,538[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-66[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Shutting down DiscoveryClient ...
[30m2022-01-20 17:33:11,564[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:33:11,565[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-66[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Unregistering ...
[30m2022-01-20 17:33:11,627[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-66[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - deregister  status: 200
[30m2022-01-20 17:33:11,636[0;39m [34m[0;39m[32m INFO[0;39m [[34mThread-66[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Completed shut down of DiscoveryClient
[30m2022-01-20 17:33:12,140[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Starting TransfertAgentServiceApplication using Java 1.8.0_302 on mouad with PID 12705 (/home/miken/projects/e-banking/my-transfert-agent/target/classes started by miken in /home/miken/projects/e-banking/my-transfert-agent)
[30m2022-01-20 17:33:12,140[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.SpringApplication[0;39m : No active profile set, falling back to default profiles: default
[30m2022-01-20 17:33:12,568[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[30m2022-01-20 17:33:12,570[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m : Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
[30m2022-01-20 17:33:12,658[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.context.scope.GenericScope[0;39m : BeanFactory id=80f107ef-8bd5-39e6-8542-ee285c3ffe95
[30m2022-01-20 17:33:12,682[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:33:12,686[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:33:12,688[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[0;39m : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[30m2022-01-20 17:33:12,745[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat initialized with port(s): 8080 (http)
[30m2022-01-20 17:33:12,746[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting service [Tomcat]
[30m2022-01-20 17:33:12,746[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Starting Servlet engine: [Apache Tomcat/9.0.56]
[30m2022-01-20 17:33:12,749[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring embedded WebApplicationContext
[30m2022-01-20 17:33:12,750[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m : Root WebApplicationContext: initialization completed in 607 ms
[30m2022-01-20 17:33:12,940[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:33:13,032[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster0.qkflv.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-fhc723-shard-0'}
[30m2022-01-20 17:33:13,037[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.data.convert.CustomConversions[0;39m : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
[30m2022-01-20 17:33:13,057[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-01.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:33:13,071[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-02.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:33:13,074[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-srv-cluster0.qkflv.mongodb.net[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Adding discovered server cluster0-shard-00-00.qkflv.mongodb.net:27017 to client view of cluster
[30m2022-01-20 17:33:13,209[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m : Exposing 17 endpoint(s) beneath base path '/actuator'
[30m2022-01-20 17:33:13,306[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m : LiveReload server is running on port 35729
[30m2022-01-20 17:33:13,361[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:64, serverValue:219808}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,379[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:63, serverValue:219808}] to cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,380[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:65, serverValue:219732}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,382[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:61, serverValue:219709}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,384[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=212573070, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-00.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90b603e30a3f9934fc21, counter=4}, lastWriteDate=Thu Jan 20 17:33:13 WEST 2022, lastUpdateTimeNanos=3942077555424}
[30m2022-01-20 17:33:13,385[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.qkflv.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=217818747, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-02.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000050, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90ce998b3abb96874b41, counter=6}, lastWriteDate=Thu Jan 20 17:33:13 WEST 2022, lastUpdateTimeNanos=3942077353280}
[30m2022-01-20 17:33:13,384[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.qkflv.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=221432168, setName='atlas-fhc723-shard-0', canonicalAddress=cluster0-shard-00-01.qkflv.mongodb.net:27017, hosts=[cluster0-shard-00-01.qkflv.mongodb.net:27017, cluster0-shard-00-02.qkflv.mongodb.net:27017, cluster0-shard-00-00.qkflv.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.qkflv.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='EU_WEST_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=61dc90e6bca282157b66d0a5, counter=3}, lastWriteDate=Thu Jan 20 17:33:13 WEST 2022, lastUpdateTimeNanos=3942080243940}
[30m2022-01-20 17:33:13,386[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max election id to 7fffffff0000000000000050 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,386[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Setting max set version to 6 from replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,386[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-02.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Discovered replica set primary cluster0-shard-00-02.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,400[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-01.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:62, serverValue:219709}] to cluster0-shard-00-01.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,402[0;39m [34m[0;39m[32m INFO[0;39m [[34mcluster-rtt-ClusterId{value='61e98ec9f7b89b1d6505ecd8', description='null'}-cluster0-shard-00-00.qkflv.mongodb.net:27017[0;39m] [33mcom.mongodb.diagnostics.logging.SLF4JLogger[0;39m : Opened connection [connectionId{localValue:66, serverValue:219732}] to cluster0-shard-00-00.qkflv.mongodb.net:27017
[30m2022-01-20 17:33:13,491[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration[0;39m : Eureka HTTP Client uses RestTemplate.
[30m2022-01-20 17:33:13,521[0;39m [31m[0;39m[33m WARN[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger[0;39m : Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[30m2022-01-20 17:33:13,533[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.InstanceInfoFactory[0;39m : Setting initial instance status as: STARTING
[30m2022-01-20 17:33:13,537[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Initializing Eureka in region us-east-1
[30m2022-01-20 17:33:13,538[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
[30m2022-01-20 17:33:13,541[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Disable delta property : false
[30m2022-01-20 17:33:13,542[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Single vip registry refresh property : null
[30m2022-01-20 17:33:13,545[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Force full registry fetch : false
[30m2022-01-20 17:33:13,547[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application is null : false
[30m2022-01-20 17:33:13,549[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Registered Applications size is zero : true
[30m2022-01-20 17:33:13,551[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Application version is -1: true
[30m2022-01-20 17:33:13,552[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Getting all instance registry info from the eureka server
[30m2022-01-20 17:33:13,840[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : The response status is 200
[30m2022-01-20 17:33:13,842[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Starting heartbeat executor: renew interval is: 30
[30m2022-01-20 17:33:13,845[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.InstanceInfoReplicator[0;39m : InstanceInfoReplicator onDemand update allowed rate per min is 4
[30m2022-01-20 17:33:13,847[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : Discovery Client initialized at timestamp 1642696393847 with initial instances count: 9
[30m2022-01-20 17:33:13,849[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[0;39m : Registering application TRANSFER-AGENT-SERVICE with eureka with status UP
[30m2022-01-20 17:33:13,849[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33mcom.netflix.discovery.DiscoveryClient$3[0;39m : Saw local status change event StatusChangeEvent [timestamp=1642696393849, current=UP, previous=STARTING]
[30m2022-01-20 17:33:13,852[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m : Tomcat started on port(s): 8080 (http) with context path ''
[30m2022-01-20 17:33:13,853[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[0;39m : Updating port to 8080
[30m2022-01-20 17:33:13,860[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080: registering service...
[30m2022-01-20 17:33:14,054[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.StartupInfoLogger[0;39m : Started TransfertAgentServiceApplication in 1.962 seconds (JVM running for 502.093)
[30m2022-01-20 17:33:14,061[0;39m [34m[0;39m[32m INFO[0;39m [[34mrestartedMain[0;39m] [33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m : Condition evaluation unchanged
[30m2022-01-20 17:33:14,119[0;39m [34m[0;39m[32m INFO[0;39m [[34mDiscoveryClient-InstanceInfoReplicator-0[0;39m] [33mcom.netflix.discovery.DiscoveryClient[0;39m : DiscoveryClient_TRANSFER-AGENT-SERVICE/mouad:TRANSFER-AGENT-SERVICE:8080 - registration status: 204
[30m2022-01-20 17:33:14,323[0;39m [34m[0;39m[32m INFO[0;39m [[34mregistrationTask1[0;39m] [33mde.codecentric.boot.admin.client.registration.DefaultApplicationRegistrator[0;39m : Application registered itself as 4c6d730660ba
[30m2022-01-20 17:33:47,802[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.apache.juli.logging.DirectJDKLog[0;39m : Initializing Spring DispatcherServlet 'dispatcherServlet'
[30m2022-01-20 17:33:47,805[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Initializing Servlet 'dispatcherServlet'
[30m2022-01-20 17:33:47,813[0;39m [34m[0;39m[32m INFO[0;39m [[34mhttp-nio-8080-exec-1[0;39m] [33morg.springframework.web.servlet.FrameworkServlet[0;39m : Completed initialization in 7 ms
[30m2022-01-20 17:38:13,556[0;39m [34m[0;39m[32m INFO[0;39m [[34mAsyncResolver-bootstrap-executor-0[0;39m] [33mcom.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[0;39m : Resolving eureka endpoints via configuration
